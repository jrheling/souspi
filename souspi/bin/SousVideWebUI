#!/usr/bin/python

import os
import sys
import logging
import time
import ConfigParser

from flask import Flask
from flask import render_template, request, redirect, url_for
from gevent.wsgi import WSGIServer

import SousPi

app = Flask(__name__)

@app.route('/')
def main_screen():
    return render_template('main_screen.html', data=spui.current_status)

@app.route('/stop')
def stop():
    if spui.status.running:
        spui.stop()
    return redirect(url_for('main_screen'))

@app.route('/start')
def start():
    if not spui.status.running:
        spui.start()
    return redirect(url_for('main_screen'))

@app.route('/setpoint', methods=['POST'])
def change_setpoint():
    #print request
    if request.method == 'POST':
        spui.change_setpoint(request.form['new_target'])
    time.sleep(0.5)  # FIXME - this doesn't seem to be working - (is just a hack at user feedback, anyway)
    return redirect(url_for('main_screen'))
    ## FIXME - give user feedback?  Force refresh?

if __name__ == "__main__":
    
    use_debug_server = False

    cp = ConfigParser.ConfigParser()
    cp.read("souspi.cfg")  
    logdir = cp.get("general", "log_dir")
    if os.access(logdir, os.W_OK):
        logfile = os.path.normpath(logdir + "/" + "webui.log")
    else:
        logfile = "sous_vide_webui.log"

    logging.basicConfig(filename=logfile, format='%(asctime)s::%(levelname)s::%(message)s', 
                        level=logging.DEBUG)
    logging.info("Started up SousVideWebUI.")
    
    spui = SousPi.SousPiWebUI()
                        
    if use_debug_server is not True:
        http_server = WSGIServer(('', 5000), app)

    try:
        if use_debug_server:
            app.run(host='0.0.0.0', debug=True)
        else:
            http_server.serve_forever()
    except KeyboardInterrupt, SystemExit:
        logging.info("Closing down SousVideWebUI.")
        sys.exit(0)
        